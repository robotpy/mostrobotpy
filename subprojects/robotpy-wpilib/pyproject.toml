[build-system]
build-backend = "hatchling.build"
requires = [
    "semiwrap~=0.1.2",
    "hatch-meson~=0.1.0b2",
    "hatch-robotpy~=0.2",
    "hatchling",
    "robotpy-native-wpilib==2025.3.2",
    "robotpy-wpiutil==2025.3.2.3",
    "robotpy-wpimath==2025.3.2.3",
    "robotpy-hal==2025.3.2.3",
    "pyntcore==2025.3.2.3",
]

[project]
name = "wpilib"
version = "2025.3.2.3"
description = "Binary wrapper for FRC WPILib"
authors = [
    {name = "RobotPy Development Team", email = "robotpy@googlegroups.com"},
]
license = "BSD-3-Clause"
dependencies = [
    "robotpy-native-wpilib==2025.3.2",
    "robotpy-wpiutil==2025.3.2.3",
    "robotpy-wpimath==2025.3.2.3",
    "robotpy-hal==2025.3.2.3",
    "pyntcore==2025.3.2.3",
    "robotpy-cli~=2024.0b"
]

[project.urls]
"Source code" = "https://github.com/robotpy/mostrobotpy"

[project.entry-points.robotpy]
run = "wpilib._impl.start:Main"


[tool.hatch.build.hooks.robotpy]
version_file = "wpilib/version.py"

[tool.hatch.build.hooks.semiwrap]

[tool.hatch.build.hooks.meson]

[tool.hatch.build.targets.wheel]
packages = ["wpilib"]


[tool.semiwrap]
update_init = [
    "wpilib",
    "wpilib.counter",
    "wpilib.drive",
    "wpilib.event",
    "wpilib.interfaces",
    "wpilib.shuffleboard",
    "wpilib.simulation",
    "wpilib.sysid wpilib._wpilib.sysid",
]
scan_headers_ignore = [
    "WPILibVersion.h",

    # needs a python wrapper
    "frc/AsynchronousInterrupt.h",

    # Needs HAL object support, not sure if this is a good idea for python
    "frc/DMA.h",
    "frc/DMASample.h",

    "frc/Filesystem.h",
    "frc/Notifier.h", # wrapped separately
    "frc/Resource.h",
    "frc/ScopedTracer.h", # not useful for python

    "frc/motorcontrol/MotorControllerGroup.h", # wrapped separately

    # Not possible
    "frc/shuffleboard/RecordingController.h",
    "frc/shuffleboard/SendableCameraWrapper.h",

    "frc/smartdashboard/ListenerExecutor.h",    # internal detail

    # Internals
    "rpy/ControlWord.h",
    "rpy/SmartDashboardData.h",
    "ShuffleboardData.h",
]

[tool.semiwrap.extension_modules."wpilib._wpilib"]
name = "wpilib"
wraps = ["robotpy-native-wpilib"]
depends = [
    "wpihal", "wpiutil", "ntcore",
    "wpimath", "wpimath_geometry", "wpimath_controls",
    "wpilib_interfaces", "wpilib_event"
]
includes = ["wpilib/src"]

[tool.semiwrap.extension_modules."wpilib._wpilib".defines]
DYNAMIC_CAMERA_SERVER = 1

[tool.semiwrap.extension_modules."wpilib._wpilib".headers]
# frc
ADIS16448_IMU = "frc/ADIS16448_IMU.h"
ADIS16470_IMU = "frc/ADIS16470_IMU.h"
ADXL345_I2C = "frc/ADXL345_I2C.h"
ADXL345_SPI = "frc/ADXL345_SPI.h"
ADXL362 = "frc/ADXL362.h"
ADXRS450_Gyro = "frc/ADXRS450_Gyro.h"
AddressableLED = "frc/AddressableLED.h"
Alert = "frc/Alert.h"
AnalogAccelerometer = "frc/AnalogAccelerometer.h"
AnalogEncoder = "frc/AnalogEncoder.h"
AnalogGyro = "frc/AnalogGyro.h"
AnalogInput = "frc/AnalogInput.h"
AnalogOutput = "frc/AnalogOutput.h"
AnalogPotentiometer = "frc/AnalogPotentiometer.h"
AnalogTrigger = "frc/AnalogTrigger.h"
AnalogTriggerOutput = "frc/AnalogTriggerOutput.h"
AnalogTriggerType = "frc/AnalogTriggerType.h"  
BuiltInAccelerometer = "frc/BuiltInAccelerometer.h"
CAN = "frc/CAN.h"
Compressor = "frc/Compressor.h"
CompressorConfigType = "frc/CompressorConfigType.h"
Counter = "frc/Counter.h"
DataLogManager = "frc/DataLogManager.h"
DSControlWord = "frc/DSControlWord.h"
DigitalGlitchFilter = "frc/DigitalGlitchFilter.h"
DigitalInput = "frc/DigitalInput.h"
DigitalOutput = "frc/DigitalOutput.h"
DigitalSource = "frc/DigitalSource.h"
DoubleSolenoid = "frc/DoubleSolenoid.h"
DriverStation = "frc/DriverStation.h"
DutyCycle = "frc/DutyCycle.h"
DutyCycleEncoder = "frc/DutyCycleEncoder.h"
Encoder = "frc/Encoder.h"
Errors = "frc/Errors.h"
Filesystem = "rpy/Filesystem.h"
I2C = "frc/I2C.h"
IterativeRobotBase = "frc/IterativeRobotBase.h"
Joystick = "frc/Joystick.h"
LEDPattern = "frc/LEDPattern.h"
MotorSafety = "frc/MotorSafety.h"
Notifier = "rpy/Notifier.h"
PS4Controller = "frc/PS4Controller.h"
PS5Controller = "frc/PS5Controller.h"
PWM = "frc/PWM.h"
PneumaticHub = "frc/PneumaticHub.h"
PneumaticsBase = "frc/PneumaticsBase.h"
PneumaticsControlModule = "frc/PneumaticsControlModule.h"
PneumaticsModuleType = "frc/PneumaticsModuleType.h"
PowerDistribution = "frc/PowerDistribution.h"
Preferences = "frc/Preferences.h"
Relay = "frc/Relay.h"
RobotBase = "frc/RobotBase.h"
RobotController = "frc/RobotController.h"
RobotState = "frc/RobotState.h"
RuntimeType = "frc/RuntimeType.h"
SPI = "frc/SPI.h"
SensorUtil = "frc/SensorUtil.h"
SerialPort = "frc/SerialPort.h"
Servo = "frc/Servo.h"
SharpIR = "frc/SharpIR.h"
Solenoid = "frc/Solenoid.h"
StadiaController = "frc/StadiaController.h"
SynchronousInterrupt = "frc/SynchronousInterrupt.h"
Threads = "frc/Threads.h"
TimedRobot = "frc/TimedRobot.h"
Timer = "frc/Timer.h"
TimesliceRobot = "frc/TimesliceRobot.h"
Tracer = "frc/Tracer.h"
Ultrasonic = "frc/Ultrasonic.h"
Watchdog = "frc/Watchdog.h"
XboxController = "frc/XboxController.h"

# frc/internal
DriverStationModeThread = "frc/internal/DriverStationModeThread.h"

# frc/livewindow
LiveWindow = "frc/livewindow/LiveWindow.h"

# frc/motorcontrol
DMC60 = "frc/motorcontrol/DMC60.h"
Jaguar = "frc/motorcontrol/Jaguar.h"
Koors40 = "frc/motorcontrol/Koors40.h"
MotorControllerGroup = "rpy/MotorControllerGroup.h"
NidecBrushless = "frc/motorcontrol/NidecBrushless.h"
PWMMotorController = "frc/motorcontrol/PWMMotorController.h"
PWMSparkFlex = "frc/motorcontrol/PWMSparkFlex.h"
PWMSparkMax = "frc/motorcontrol/PWMSparkMax.h"
PWMTalonFX = "frc/motorcontrol/PWMTalonFX.h"
PWMTalonSRX = "frc/motorcontrol/PWMTalonSRX.h"
PWMVenom = "frc/motorcontrol/PWMVenom.h"
PWMVictorSPX = "frc/motorcontrol/PWMVictorSPX.h"
SD540 = "frc/motorcontrol/SD540.h"
Spark = "frc/motorcontrol/Spark.h"
Talon = "frc/motorcontrol/Talon.h"
Victor = "frc/motorcontrol/Victor.h"
VictorSP = "frc/motorcontrol/VictorSP.h"

# frc/smartdashboard
Field2d = "frc/smartdashboard/Field2d.h"
FieldObject2d = "frc/smartdashboard/FieldObject2d.h"
Mechanism2d = "frc/smartdashboard/Mechanism2d.h"
MechanismLigament2d = "frc/smartdashboard/MechanismLigament2d.h"
MechanismObject2d = "frc/smartdashboard/MechanismObject2d.h"
MechanismRoot2d = "frc/smartdashboard/MechanismRoot2d.h"
SendableBuilderImpl = "frc/smartdashboard/SendableBuilderImpl.h"
SendableChooser = "frc/smartdashboard/SendableChooser.h"
SendableChooserBase = "frc/smartdashboard/SendableChooserBase.h"
SmartDashboard = "frc/smartdashboard/SmartDashboard.h"

# frc/sysid
SysIdRoutineLog = "frc/sysid/SysIdRoutineLog.h"

# frc/util
Color = "frc/util/Color.h"
Color8Bit = "frc/util/Color8Bit.h"


[tool.semiwrap.extension_modules."wpilib.counter._counter"]
name = "wpilib_counter"
wraps = ["robotpy-native-wpilib"]
depends = ["wpilib"]
yaml_path = "semiwrap/counter"

[tool.semiwrap.extension_modules."wpilib.counter._counter".headers]
# frc/counter
EdgeConfiguration = "frc/counter/EdgeConfiguration.h"
ExternalDirectionCounter = "frc/counter/ExternalDirectionCounter.h"
Tachometer = "frc/counter/Tachometer.h"
UpDownCounter = "frc/counter/UpDownCounter.h"


[tool.semiwrap.extension_modules."wpilib.drive._drive"]
name = "wpilib_drive"
wraps = ["robotpy-native-wpilib"]
depends = ["wpilib"]
yaml_path = "semiwrap/drive"

[tool.semiwrap.extension_modules."wpilib.drive._drive".headers]
# frc/drive
DifferentialDrive = "frc/drive/DifferentialDrive.h"
MecanumDrive = "frc/drive/MecanumDrive.h"
RobotDriveBase = "frc/drive/RobotDriveBase.h"


[tool.semiwrap.extension_modules."wpilib.event._event"]
name = "wpilib_event"
wraps = ["robotpy-native-wpilib"]
# depends = ["wpilib", "wpimath_filter"]
depends = ["wpimath_filter"]
yaml_path = "semiwrap/event"

[tool.semiwrap.extension_modules."wpilib.event._event".headers]
# frc/event
BooleanEvent = "frc/event/BooleanEvent.h"
EventLoop = "frc/event/EventLoop.h"
NetworkBooleanEvent = "frc/event/NetworkBooleanEvent.h"


[tool.semiwrap.extension_modules."wpilib.interfaces._interfaces"]
name = "wpilib_interfaces"
wraps = ["robotpy-native-wpilib"]
depends = ["wpilib_event", "wpimath_geometry"]
yaml_path = "semiwrap/interfaces"

[tool.semiwrap.extension_modules."wpilib.interfaces._interfaces".headers]
# frc
CounterBase = "frc/CounterBase.h"
GenericHID = "frc/GenericHID.h"
MotorController = "frc/motorcontrol/MotorController.h"


[tool.semiwrap.extension_modules."wpilib.shuffleboard._shuffleboard"]
name = "wpilib_shuffleboard"
wraps = ["robotpy-native-wpilib"]
depends = ["wpilib", "wpilib_interfaces"]
yaml_path = "semiwrap/shuffleboard"

[tool.semiwrap.extension_modules."wpilib.shuffleboard._shuffleboard".defines]
DYNAMIC_CAMERA_SERVER = 1


[tool.semiwrap.extension_modules."wpilib.shuffleboard._shuffleboard".headers]
# frc/shuffleboard

BuiltInLayouts = "frc/shuffleboard/BuiltInLayouts.h"
BuiltInWidgets = "frc/shuffleboard/BuiltInWidgets.h"
ComplexWidget = "frc/shuffleboard/ComplexWidget.h"
LayoutType = "frc/shuffleboard/LayoutType.h"
# RecordingController = "frc/shuffleboard/RecordingController.h"
# SendableCameraWrapper = "frc/shuffleboard/SendableCameraWrapper.h"
Shuffleboard = "frc/shuffleboard/Shuffleboard.h"
ShuffleboardComponent = "frc/shuffleboard/ShuffleboardComponent.h"
ShuffleboardComponentBase = "frc/shuffleboard/ShuffleboardComponentBase.h"
ShuffleboardContainer = "frc/shuffleboard/ShuffleboardContainer.h"
ShuffleboardEventImportance = "frc/shuffleboard/ShuffleboardEventImportance.h"
ShuffleboardInstance = "frc/shuffleboard/ShuffleboardInstance.h"
ShuffleboardLayout = "frc/shuffleboard/ShuffleboardLayout.h"
ShuffleboardRoot = "frc/shuffleboard/ShuffleboardRoot.h"
ShuffleboardTab = "frc/shuffleboard/ShuffleboardTab.h"
ShuffleboardValue = "frc/shuffleboard/ShuffleboardValue.h"
ShuffleboardWidget = "frc/shuffleboard/ShuffleboardWidget.h"
SimpleWidget = "frc/shuffleboard/SimpleWidget.h"
SuppliedValueWidget = "frc/shuffleboard/SuppliedValueWidget.h"
WidgetType = "frc/shuffleboard/WidgetType.h"


[tool.semiwrap.extension_modules."wpilib.simulation._simulation"]
name = "wpilib_simulation"
wraps = ["robotpy-native-wpilib"]
depends = ["wpilib", "wpimath_controls", "wpimath_geometry", "wpimath_kinematics"]
yaml_path = "semiwrap/simulation"

[tool.semiwrap.extension_modules."wpilib.simulation._simulation".headers]
# frc/simulation
ADIS16448_IMUSim = "frc/simulation/ADIS16448_IMUSim.h"
ADIS16470_IMUSim = "frc/simulation/ADIS16470_IMUSim.h"
ADXL345Sim = "frc/simulation/ADXL345Sim.h"
ADXL362Sim = "frc/simulation/ADXL362Sim.h"
ADXRS450_GyroSim = "frc/simulation/ADXRS450_GyroSim.h"
AddressableLEDSim = "frc/simulation/AddressableLEDSim.h"
AnalogEncoderSim = "frc/simulation/AnalogEncoderSim.h"
AnalogGyroSim = "frc/simulation/AnalogGyroSim.h"
AnalogInputSim = "frc/simulation/AnalogInputSim.h"
AnalogOutputSim = "frc/simulation/AnalogOutputSim.h"
AnalogTriggerSim = "frc/simulation/AnalogTriggerSim.h"
BatterySim = "frc/simulation/BatterySim.h"
BuiltInAccelerometerSim = "frc/simulation/BuiltInAccelerometerSim.h"
CTREPCMSim = "frc/simulation/CTREPCMSim.h"
CallbackStore = "frc/simulation/CallbackStore.h"
DCMotorSim = "frc/simulation/DCMotorSim.h"
DIOSim = "frc/simulation/DIOSim.h"
DifferentialDrivetrainSim = "frc/simulation/DifferentialDrivetrainSim.h"
DigitalPWMSim = "frc/simulation/DigitalPWMSim.h"
DoubleSolenoidSim = "frc/simulation/DoubleSolenoidSim.h"
DriverStationSim = "frc/simulation/DriverStationSim.h"
DutyCycleEncoderSim = "frc/simulation/DutyCycleEncoderSim.h"
DutyCycleSim = "frc/simulation/DutyCycleSim.h"
ElevatorSim = "frc/simulation/ElevatorSim.h"
EncoderSim = "frc/simulation/EncoderSim.h"
FlywheelSim = "frc/simulation/FlywheelSim.h"
GenericHIDSim = "frc/simulation/GenericHIDSim.h"
JoystickSim = "frc/simulation/JoystickSim.h"
LinearSystemSim = "frc/simulation/LinearSystemSim.h"
PS4ControllerSim = "frc/simulation/PS4ControllerSim.h"
PS5ControllerSim = "frc/simulation/PS5ControllerSim.h"
PWMSim = "frc/simulation/PWMSim.h"
PneumaticsBaseSim = "frc/simulation/PneumaticsBaseSim.h"
PowerDistributionSim = "frc/simulation/PowerDistributionSim.h"
REVPHSim = "frc/simulation/REVPHSim.h"
RelaySim = "frc/simulation/RelaySim.h"
RoboRioSim = "frc/simulation/RoboRioSim.h"
SPIAccelerometerSim = "frc/simulation/SPIAccelerometerSim.h"
SendableChooserSim = "frc/simulation/SendableChooserSim.h"
SharpIRSim = "frc/simulation/SharpIRSim.h"
SimDeviceSim = "frc/simulation/SimDeviceSim.h"
SimHooks = "frc/simulation/SimHooks.h"
SingleJointedArmSim = "frc/simulation/SingleJointedArmSim.h"
SolenoidSim = "frc/simulation/SolenoidSim.h"
StadiaControllerSim = "frc/simulation/StadiaControllerSim.h"
UltrasonicSim = "frc/simulation/UltrasonicSim.h"
XboxControllerSim = "frc/simulation/XboxControllerSim.h"
