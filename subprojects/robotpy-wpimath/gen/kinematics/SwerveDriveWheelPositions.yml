---

classes:
  SwerveDriveWheelPositions:
    template_params:
    - size_t NumModules
    force_type_casters:
    - wpi::array
    force_no_default_constructor: true
    attributes:
      positions:
    methods:
      operator==:
        cpp_code: |
          "__eq__", [](frc::SwerveDriveWheelPositions<NumModules> &self, frc::SwerveDriveWheelPositions<NumModules> &other) {
              return self == other;
          }, py::is_operator()
      operator!=:
        cpp_code: |
          "__ne__", [](frc::SwerveDriveWheelPositions<NumModules> &self, frc::SwerveDriveWheelPositions<NumModules> &other) {
              return self != other;
          }, py::is_operator()
      Interpolate:

    template_inline_code: |
      if constexpr (NumModules == 2) {
        cls_SwerveDriveWheelPositions.def(py::init<SwerveModulePosition, SwerveModulePosition>());
      } else if constexpr (NumModules == 3) {
        cls_SwerveDriveWheelPositions.def(py::init<SwerveModulePosition, SwerveModulePosition, SwerveModulePosition>());
      } else if constexpr (NumModules == 4) {
        cls_SwerveDriveWheelPositions.def(py::init<SwerveModulePosition, SwerveModulePosition, SwerveModulePosition, SwerveModulePosition>());
      } else if constexpr (NumModules == 6) {
        cls_SwerveDriveWheelPositions.def(py::init<SwerveModulePosition, SwerveModulePosition, SwerveModulePosition, SwerveModulePosition, SwerveModulePosition, SwerveModulePosition>());
      }

templates:
  SwerveDrive2WheelPositions:
    qualname: frc::SwerveDriveWheelPositions
    params:
    - 2
  SwerveDrive3WheelPositions:
    qualname: frc::SwerveDriveWheelPositions
    params:
    - 3
  SwerveDrive4WheelPositions:
    qualname: frc::SwerveDriveWheelPositions
    params:
    - 4
  SwerveDrive6WheelPositions:
    qualname: frc::SwerveDriveWheelPositions
    params:
    - 6
